version: '3.8'
services:
  app:
    env_file:
      - .env
    image: ${DOCKER_HUB_USR}/${APP_NAME}:${IMAGE_TAG}
    container_name: ${CONTAINER_NAME}
    ports:
      - "8081:8080"
    restart: always
    volumes:
      - /var/log/eye-on:/app/logs
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/actuator/health" ]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
      - --enable-feature=remote-write-receiver
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    restart: unless-stopped
    ports:
      - "4000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - monitoring

  k6:
    image: grafana/k6:0.47.0
    container_name: k6
    restart: unless-stopped
    ports:
      - "6565:6565"
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
      - K6_OUT=experimental-prometheus-rw
    volumes:
      - ./src/main/java/com/on/eye/api/test/scripts:/scripts
    depends_on:
      - prometheus
    networks:
      - monitoring

networks:
  monitoring:
    external: true

volumes:
  prometheus-data:
  grafana-storage:
